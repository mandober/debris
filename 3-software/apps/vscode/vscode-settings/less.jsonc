{

  // Insert semicolon at end of line when completing CSS properties.
  "less.completion.completePropertyWithSemicolon": true,

  // By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.
  "less.completion.triggerPropertyValueCompletion": true,

  // Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).
  "less.format.braceStyle": "collapse",

  // Enable/disable default LESS formatter.
  "less.format.enable": true,

  // Maximum number of line breaks to be preserved in one chunk, when `less.format.preserveNewLines` is enabled.
  "less.format.maxPreserveNewLines": null,

  // Separate rulesets by a blank line.
  "less.format.newlineBetweenRules": true,

  // Separate selectors with a new line.
  "less.format.newlineBetweenSelectors": true,

  // Whether existing line breaks before elements should be preserved.
  "less.format.preserveNewLines": true,

  // Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).
  "less.format.spaceAroundSelectorSeparator": false,

  // Show tag and attribute documentation in LESS hovers.
  "less.hover.documentation": true,

  // Show references to MDN in LESS hovers.
  "less.hover.references": true,

  // Invalid number of parameters.
  "less.lint.argumentsInColorFunction": "error",

  // Do not use `width` or `height` when using `padding` or `border`.
  "less.lint.boxModel": "ignore",

  // When using a vendor-specific prefix make sure to also include all other vendor-specific properties.
  "less.lint.compatibleVendorPrefixes": "ignore",

  // Do not use duplicate style definitions.
  "less.lint.duplicateProperties": "ignore",

  // Do not use empty rulesets.
  "less.lint.emptyRules": "warning",

  // Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
  "less.lint.float": "ignore",

  // `@font-face` rule must define `src` and `font-family` properties.
  "less.lint.fontFaceProperties": "warning",

  // Hex colors must consist of three or six hex numbers.
  "less.lint.hexColorLength": "error",

  // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
  "less.lint.idSelector": "ignore",

  // IE hacks are only necessary when supporting IE7 and older.
  "less.lint.ieHack": "ignore",

  // Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
  "less.lint.important": "ignore",

  // Import statements do not load in parallel.
  "less.lint.importStatement": "ignore",

  // Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.
  "less.lint.propertyIgnoredDueToDisplay": "warning",

  // The universal selector (`*`) is known to be slow.
  "less.lint.universalSelector": "ignore",

  // Unknown at-rule.
  "less.lint.unknownAtRules": "warning",

  // Unknown property.
  "less.lint.unknownProperties": "warning",

  // Unknown vendor specific property.
  "less.lint.unknownVendorSpecificProperties": "ignore",

  // A list of properties that are not validated against the `unknownProperties` rule.
  "less.lint.validProperties": [],

  // When using a vendor-specific prefix, also include the standard property.
  "less.lint.vendorPrefix": "warning",

  // No unit for zero needed.
  "less.lint.zeroUnits": "ignore",

  // Enables or disables all validations.
  "less.validate": true,

}
