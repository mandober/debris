{
  // If `true`, then auto-update the proof view with the cached state of the sentence the at the cursor. States are only cached when stepping through a proof, so the proof view will not be updated if e.g. the sentence was processed asynchronously and never had direct focus.
  "coq.autoRevealProofStateAtCursor": false,

  // The path of the coq project relative to the workspace root. Also determins where to look for the `_CoqProject` file. Requires reloading.
  "coq.coqProjectRoot": ".",

  // If `false`, then all auto-formatting under `coq.format` is disabled
  "coq.format.enable": true,

  // Control how to indent the line after a bullet. `none` - no indent; `indent` - tab-indent; `align` - align to the previous line's tactic
  "coq.format.indentAfterBullet": "none",

  // Indent after opening a proof with 'Proof'
  "coq.format.indentAfterOpenProof": false,

  // Auto-unindent `Qed.`, `Defined.`, and `Admitted.`. Note: requires `#editor.formatOnType#' to be set to `true` in settings.json
  "coq.format.unindentOnCloseProof": true,

  // Interpret to point will interpret up to *and including* the sentence at the cursor
  "coq.interpretToEndOfSentence": false,

  // Load settings from `_CoqProject` (if found at the root of the Code project)
  "coq.loadCoqProject": true,

  // Move the editor's cursor position as Coq interactively steps forward/backward a command
  "coq.moveCursorToFocus": true,

  // If `true`, in the proof view, the diff will show added characters in italic. Note: the color of added characters can be changed in `coq.addedCharacter`.
  "coq.proofViewDiff.addedTextIsItalic": false,

  // If `true`, in the proof view, the diff will show removed characters with a line through. Note: the color of added characters can be changed in `coq.removedCharacter`.
  "coq.proofViewDiff.removedTextIsStrikedthrough": false,

  // Controls whether viewing the state of a sentence reveals either the parent/source/preceding or child/subsequent state.
  "coq.revealProofStateAtCursorDirection": "preceding",

  // Create the proof view when a Coq script is opened, the user first interacts with coqtop, or else let the user do it manually.
  "coq.showProofViewOn": "first-interaction",


}
