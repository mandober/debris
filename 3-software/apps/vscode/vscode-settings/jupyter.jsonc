{

  // This setting is deprecated and will be removed in the next release.
  // Allows a user to import a jupyter notebook into a python file anytime one is opened.
  "jupyter.allowImportFromNotebook": true,

  // This setting is deprecated and will be removed in the next release.
  // Allow the inputting of python code directly into the Interactive window
  "jupyter.allowInput": true,

  // This setting is deprecated as Live Share support for the interactive window no longer exists in the Jupyter extension.
  // Allow the Interactive window to be shared during a Live Share session
  "jupyter.allowLiveShare": true,

  // Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.
  "jupyter.allowUnauthorizedRemoteConnection": false,

  // Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.
  "jupyter.alwaysScrollOnNewCell": false,

  // Warn the user before restarting a kernel.
  "jupyter.askForKernelRestart": true,

  // Warn the user before trying to open really large data frames.
  "jupyter.askForLargeDataFrames": true,

  // This setting is deprecated and will be removed in the next release.
  // When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.
  "jupyter.changeDirOnImportExport": false,

  // Set of commands to put as code lens above a cell.
  "jupyter.codeLenses": "jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell",

  // Regular expression used to identify code cells. All code until the next match is considered part of this cell.
  "jupyter.codeRegularExpression": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",

  // This setting has been deprecated, please use `interactiveWindow.collapseCellInputCode` instead.
  // Collapse cell input code by default.
  "jupyter.collapseCellInputCodeByDefault": true,

  // This setting is deprecated and will be removed in an upcoming release.
  // Whether or not to use the theme's peek color as the background for the input box.
  "jupyter.colorizeInputBox": true,

  // Set of debug commands to put as code lens above a cell while debugging.
  "jupyter.debugCodeLenses": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",

  // When debugging, debug just my code.
  "jupyter.debugJustMyCode": true,

  // Path to debugpy bits for debugging cells.
  "jupyter.debugpyDistPath": "",

  // Draw a highlight behind the currently active cell.
  "jupyter.decorateCells": true,

  // Cell marker used for delineating a cell in a python file.
  "jupyter.defaultCellMarker": "# %%",

  // When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.
  "jupyter.disableJupyterAutoStart": false,

  // Enables moving to the next cell when clicking on a 'Run Cell' code lens.
  "jupyter.enableAutoMoveToNextCell": true,

  // Enables code lens for 'cells' in a python file.
  "jupyter.enableCellCodeLens": true,

  // This setting has been deprecated as Jupyter keyboard shortcuts have been moved into the ms-toolsai.jupyter-keymap extension. If you would like to disable Jupyter keyboard shortcuts, please uninstall or disable that extension instead.
  // Enables Jupyter style keyboard shortcuts for Notebooks.
  "jupyter.enableKeyboardShortcuts": true,

  // This setting is deprecated and will be removed in the next release.
  // Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.
  "jupyter.enableScrollingForCellOutputs": true,

  // Enables/disables A/B tests.
  "jupyter.experiments.enabled": true,

  // List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
  "jupyter.experiments.optInto": [],

  // List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
  "jupyter.experiments.optOutFrom": [],

  // Enable exporting a python file into a jupyter notebook and run all cells when doing so.
  "jupyter.exportWithOutputEnabled": false,

  // Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.
  "jupyter.generateSVGPlots": false,

  // This setting is deprecated and will be removed in the next release.
  // Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.
  "jupyter.ignoreVscodeTheme": false,

  // Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.
  "jupyter.interactiveWindowMode": "multiple",

  // When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.
  "jupyter.jupyterCommandLineArguments": [],

  // Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.
  "jupyter.jupyterInterruptTimeout": 10000,

  // Number of times to attempt to connect to the Jupyter Notebook
  "jupyter.jupyterLaunchRetries": 3,

  // Amount of time (in ms) to wait for the Jupyter Notebook server to start.
  "jupyter.jupyterLaunchTimeout": 60000,

  // Determines the type of connection for talking to jupyter. Local will start kernels locally. Remote allows for connections to remote servers
  "jupyter.jupyterServerType": "",

  // List of Jupyter Kernels and/or python environments that are to be excluded from the Kernel picker.
  "jupyter.kernels.filter": [],

  // This setting is deprecated and will be removed in the next release.
  // Amount of time to wait for guest connections to verify they have the Python extension installed.
  "jupyter.liveShareConnectionTimeout": 1000,

  // The logging level the extension logs at.
  "jupyter.logging.level": "debug",

  // Creates separate output panels for kernels/jupyter server console output
  "jupyter.logKernelOutputSeparately": false,

  // Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.
  "jupyter.magicCommandsAsComments": false,

  // Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.
  "jupyter.markdownRegularExpression": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",

  // This setting is deprecated and will be removed in the next release.
  // Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.
  "jupyter.maxOutputSize": 400,

  // Append a new empty cell to an interactive window file on running the currently last cell.
  "jupyter.newCellOnRunLast": true,

  // Set the root directory for running notebooks and the Interactive window.
  "jupyter.notebookFileRoot": "${fileDirname}",

  // Determines if pylance's experimental notebook support is used or not.
  "jupyter.pylanceHandlesNotebooks": false,

  // Characters which trigger auto completion on a python jupyter kernel.
  "jupyter.pythonCompletionTriggerCharacters": ".%",

  // The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.
  "jupyter.pythonExportMethod": "direct",

  // When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.
  "jupyter.remoteDebuggerPort": -1,

  // A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.
  "jupyter.runStartupCommands": "",

  // This setting is deprecated and will be removed in the next release.
  // Search all installed Python interpreters for a Jupyter installation when starting the Interactive window
  "jupyter.searchForJupyter": true,

  // When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.
  "jupyter.sendSelectionToInteractiveWindow": false,

  // This setting is deprecated and will be removed in the next release.
  // Show cell input code.
  "jupyter.showCellInputCode": true,

  // Show the Outline button in the Jupyter notebook toolbar.
  "jupyter.showOutlineButtonInNotebookToolbar": true,

  // Bring up the Variable View when starting a Run by Line session.
  "jupyter.showVariableViewWhenDebugging": true,

  // Stop running cells if a cell throws an exception.
  "jupyter.stopOnError": true,

  // When debugging a cell, stop on the first line.
  "jupyter.stopOnFirstLineWhileDebugging": true,

  // This setting is deprecated in favor of `notebook.output.textLineLimit`. This setting will be removed in an upcoming release.
  // Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.
  "jupyter.textOutputLimit": 20000,

  // In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.
  "jupyter.themeMatplotlibPlots": false,

  // When running Jupyter locally, create a default empty Jupyter config for the Interactive window
  "jupyter.useDefaultConfigForJupyter": true,

  // Types to exclude from showing in the Interactive variable explorer
  "jupyter.variableExplorerExclude": "module;function;builtin_function_or_method;ABCMeta;type",

  // Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:
  // ```
  // [
  //   {
  //     "language": "python",
  //     "query": "%who_ls",
  //     "parseExpr": "'(\\w+)'"
  //   }
  // ]
  // ```
  "jupyter.variableQueries": [],

  // Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.
  //  - jsdelivr.com: Loads widget (javascript) scripts from https://www.jsdelivr.com/
  //  - unpkg.com: Loads widget (javascript) scripts from https://unpkg.com/
  "jupyter.widgetScriptSources": [],

}
