{


  // Controls the positioning of the actionbar on rows in the search view.
  //  - auto: Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.
  //  - right: Always position the actionbar to the right.
  "search.actionsPosition": "right",

  // Controls whether the search results will be collapsed or expanded.
  //  - auto: Files with less than 10 results are expanded. Others are collapsed.
  //  - alwaysCollapse
  //  - alwaysExpand
  "search.collapseResults": "alwaysExpand",

  // Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `files.exclude` setting.
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true
  },

  // Controls whether to follow symlinks while searching.
  "search.followSymlinks": true,

  // This setting is deprecated. You can drag the search icon to a new location instead.
  // Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.
  "search.location": "sidebar",

  // The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.
  // When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.
  "search.maintainFileSearchCache": false,

  // Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.
  "search.maxResults": 20000,

  // Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the search view, or in a search editor
  //  - view: Search in the search view, either in the panel or side bars.
  //  - reuseEditor: Search in an existing search editor if present, otherwise in a new search editor.
  //  - newEditor: Search in a new search editor.
  "search.mode": "view",

  // Controls sorting order of editor history in quick open when filtering.
  //  - default: History entries are sorted by relevance based on the filter value used. More relevant entries appear first.
  //  - recency: History entries are sorted by recency. More recently opened entries appear first.
  "search.quickOpen.history.filterSortOrder": "default",

  // Whether to include results from recently opened files in the file results for Quick Open.
  "search.quickOpen.includeHistory": true,

  // Whether to include results from a global symbol search in the file results for Quick Open.
  "search.quickOpen.includeSymbols": false,

  // The default number of surrounding context lines to use when creating new Search Editors. If using `search.searchEditor.reusePriorSearchConfiguration`, this can be set to `null` (empty) to use the prior Search Editor's configuration.
  "search.searchEditor.defaultNumberOfContextLines": 1,

  // Configure effect of double clicking a result in a search editor.
  //  - selectWord: Double clicking selects the word under the cursor.
  //  - goToLocation: Double clicking opens the result in the active editor group.
  //  - openLocationToSide: Double clicking opens the result in the editor group to the side, creating one if it does not yet exist.
  "search.searchEditor.doubleClickBehaviour": "goToLocation",

  // When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.
  "search.searchEditor.reusePriorSearchConfiguration": false,

  // Search all files as you type.
  "search.searchOnType": true,

  // When `search.searchOnType` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `search.searchOnType` is disabled.
  "search.searchOnTypeDebouncePeriod": 300,

  // Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.
  "search.seedOnFocus": false,

  // Enable seeding search from the word nearest the cursor when the active editor has no selection.
  "search.seedWithNearestWord": false,

  // Controls whether to show line numbers for search results.
  "search.showLineNumbers": false,

  // Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.
  "search.smartCase": false,

  // Controls sorting order of search results.
  //  - default: Results are sorted by folder and file names, in alphabetical order.
  //  - fileNames: Results are sorted by file names ignoring folder order, in alphabetical order.
  //  - type: Results are sorted by file extensions, in alphabetical order.
  //  - modified: Results are sorted by file last modified date, in descending order.
  //  - countDescending: Results are sorted by count per file, in descending order.
  //  - countAscending: Results are sorted by count per file, in ascending order.
  "search.sortOrder": "default",

  // Controls whether to use global `.gitignore` and `.ignore` files when searching for files. Requires `search.useIgnoreFiles` to be enabled.
  "search.useGlobalIgnoreFiles": false,

  // Controls whether to use `.gitignore` and `.ignore` files when searching for files.
  "search.useIgnoreFiles": true,

  // Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `search.useIgnoreFiles` to be enabled.
  "search.useParentIgnoreFiles": false,

  // Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.
  // Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.
  "search.usePCRE2": false,

  // Controls whether to open Replace Preview when selecting or replacing a match.
  "search.useReplacePreview": true,

  // Deprecated. Consider "search.usePCRE2" for advanced regex feature support.
  // This setting is deprecated and now falls back on "search.usePCRE2".
  "search.useRipgrep": true,


}
